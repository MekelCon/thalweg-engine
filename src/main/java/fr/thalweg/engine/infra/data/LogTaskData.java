/*
 * Not used API
 * Just here to generate model of the thalweg engine
 *
 * The version of the OpenAPI document: 2024.01.01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.thalweg.engine.infra.data;

import com.fasterxml.jackson.annotation.*;
import org.mapstruct.Mapper;
import org.mapstruct.control.DeepClone;
import org.mapstruct.factory.Mappers;

import java.util.Objects;

/**
 * LogTaskData
 */
@JsonPropertyOrder({
        LogTaskData.JSON_PROPERTY_MESSAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
        value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
        allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class LogTaskData extends TaskData {
    public static final String JSON_PROPERTY_MESSAGE = "message";
    public String message;

    public LogTaskData() {
        super();
    }

    public LogTaskData message(String message) {

        this.message = message;
        return this;
    }

    /**
     * The message to log
     *
     * @return message
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getMessage() {
        return message;
    }


    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMessage(String message) {
        this.message = message;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LogTaskData logTask = (LogTaskData) o;
        return Objects.equals(this.message, logTask.message) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(message, super.hashCode());
    }

    @Override
    public String toString() {
        String sb = "class LogTaskData {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public LogTaskData copy() {
        return Cloner.INSTANCE.clone(this);
    }

    @Mapper(mappingControl = DeepClone.class)
    public interface Cloner {
        Cloner INSTANCE = Mappers.getMapper(Cloner.class);

        LogTaskData clone(LogTaskData source);


    }

}

