/*
 * Not used API
 * Just here to generate model of the thalweg engine
 *
 * The version of the OpenAPI document: 2024.01.01
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.thalweg.engine.infra.data;

import com.badlogic.gdx.utils.Array;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.mapstruct.Mapper;
import org.mapstruct.control.DeepClone;
import org.mapstruct.factory.Mappers;

import java.util.Objects;

/**
 * ThalwegScreenData
 */
@JsonPropertyOrder({
        ThalwegScreenData.JSON_PROPERTY_NAME,
        ThalwegScreenData.JSON_PROPERTY_ACTORS
})
@JsonTypeName("ThalwegScreen")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ThalwegScreenData {
    public static final String JSON_PROPERTY_NAME = "name";
    public static final String JSON_PROPERTY_ACTORS = "actors";
    public String name;
    public Array<ThalwegActorData> actors = new Array<>();

    public ThalwegScreenData() {
    }

    public ThalwegScreenData name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }


    public ThalwegScreenData actors(Array<ThalwegActorData> actors) {

        this.actors = actors;
        return this;
    }

    public ThalwegScreenData addActorsItem(ThalwegActorData actorsItem) {
        if (this.actors == null) {
            this.actors = new Array<>();
        }
        this.actors.add(actorsItem);
        return this;
    }

    /**
     * Get actors
     *
     * @return actors
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACTORS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Array<ThalwegActorData> getActors() {
        return actors;
    }


    @JsonProperty(JSON_PROPERTY_ACTORS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setActors(Array<ThalwegActorData> actors) {
        this.actors = actors;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ThalwegScreenData thalwegScreen = (ThalwegScreenData) o;
        return Objects.equals(this.name, thalwegScreen.name) &&
                Objects.equals(this.actors, thalwegScreen.actors);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, actors);
    }

    @Override
    public String toString() {
        String sb = "class ThalwegScreenData {\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    actors: " + toIndentedString(actors) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public ThalwegScreenData copy() {
        return Cloner.INSTANCE.clone(this);
    }

    @Mapper(mappingControl = DeepClone.class)
    public interface Cloner {
        Cloner INSTANCE = Mappers.getMapper(Cloner.class);

        ThalwegScreenData clone(ThalwegScreenData source);


        default Array<ThalwegActorData> mapThalwegActorData(Array<ThalwegActorData> source) {
            if (source == null) {
                return null;
            }
            var res = new Array<>(source.size);
            for (ThalwegActorData t : source.toArray())
                res.add(ThalwegActorData.Cloner.INSTANCE.clone(t));
            return new Array<>(source);
        }
    }

}

